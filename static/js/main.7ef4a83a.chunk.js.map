{"version":3,"sources":["Components/BreakInterval.js","Components/SessionInterval.js","Components/Timer.js","Components/Cycle.js","Components/App.js","index.js"],"names":["BreakInterval","props","id","disabled","isPlay","onClick","currentInterval","breakInterval","onBreakIntervalChange","className","SessionInterval","sessionInterval","onSessionIntervalChange","Timer","state","timerSeconds","intervalId","isSessionInterval","cycle","playStopTimer","bind","resetTimer","event","target","dataset","type","this","onPlayChange","decreaseTimer","clearInterval","setInterval","timerMinute","setState","onTimerMinuteChange","numcycle","timerClass","React","Component","Cycle","itemInputRef","useRef","onSubmit","preventDefault","enteredItem","current","value","isNaN","alert","numOfCycles","ref","required","App","useState","setBreakInterval","setSessionInterval","setTimerMinute","setIsPlay","setCycle","newBreakLength","newSessionLength","num","minuteChange","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0UAqCeA,MAlCf,SAAuBC,GAerB,OACE,0BAASC,GAAG,2BAAZ,UACE,8CACA,0BAASA,GAAG,sBAAZ,UACE,wBACAC,SAAYF,EAAMG,OAAS,WAAa,GACxCC,QAhBN,WACE,IAAMC,EAAkBL,EAAMM,cAEN,IAApBD,GAIJL,EAAMO,sBAAsBF,EAAkB,IAU1CG,UAAU,cAHV,eAKA,mBAAGA,UAAU,aAAb,SAA2BR,EAAMM,gBACjC,wBACAJ,SAAYF,EAAMG,OAAS,WAAa,GACxCC,QA1BN,WACEJ,EAAMO,sBAAsBP,EAAMM,cAAgB,IA0B9CE,UAAU,cAHV,sB,MCcOC,MAvCf,SAAyBT,GAqBvB,OACE,0BAASC,GAAG,6BAAZ,UACE,gDACA,0BAASA,GAAG,mBAAZ,UACE,wBACAC,SAAYF,EAAMG,OAAS,WAAa,GACxCC,QAhBN,WACE,IAAMC,EAAkBL,EAAMU,gBAEN,IAApBL,GAIJL,EAAMW,wBAAwBN,EAAkB,IAU5CG,UAAU,cAHV,eAIA,mBAAGA,UAAU,eAAb,SAA6BR,EAAMU,kBACnC,wBACAR,SAAYF,EAAMG,OAAS,WAAa,GACxCC,QA9BN,WAC0BJ,EAAMU,iBAEP,IAGvBV,EAAMW,wBAAwBX,EAAMU,gBAAkB,IAyBlDF,UAAU,cAHV,sB,mCC0FOI,G,8DAtHb,aAAe,IAAD,8BACZ,gBAEKC,MAAQ,CACXC,aAAc,EACdC,WAAY,GACZC,mBAAmB,EACnBC,MAAO,GAGT,EAAKC,cAAgB,EAAKA,cAAcC,KAAnB,gBACrB,EAAKC,WAAa,EAAKA,WAAWD,KAAhB,gBAXN,E,iDAcd,SAAcE,GAGZ,OAFeA,EAAMC,OAAOC,QAAQC,MAGlC,IAAK,OACHC,KAAKzB,MAAM0B,cAAa,GACxBD,KAAKE,gBACL,MACF,IAAK,OACHF,KAAKzB,MAAM0B,cAAa,GACxBE,cAAcH,KAAKZ,MAAME,e,2BAO/B,WAAiB,IAAD,OAEVA,EAAac,aAAY,WAC3B,OAAO,EAAKhB,MAAMC,cAChB,KAAK,EAC4B,IAA3B,EAAKd,MAAM8B,YACT,EAAKjB,MAAMG,mBAEb,EAAKe,SAAS,CACZf,mBAAmB,IAGrB,EAAKhB,MAAMgC,oBAAoB,EAAKhC,MAAMM,iBAG1C,EAAKyB,SAAS,CACZf,mBAAmB,EACnBC,MAAO,EAAKJ,MAAMI,MAAM,IAGvB,EAAKJ,MAAMI,QAAQ,EAAKjB,MAAMiC,UAC3BL,cAAc,EAAKf,MAAME,YAG/B,EAAKf,MAAMgC,oBAAoB,EAAKhC,MAAMU,mBAG5C,EAAKV,MAAMgC,oBAAoB,EAAKhC,MAAM8B,YAAc,GACxD,EAAKC,SAAS,CACZjB,aAAc,MAIlB,MACF,QACA,EAAKiB,SAAS,CACZjB,aAAc,EAAKD,MAAMC,aAAe,OAI3C,KAEHW,KAAKM,SAAS,CACZhB,WAAYA,M,wBAOhB,WACEa,cAAcH,KAAKZ,MAAME,YAEzBU,KAAKzB,MAAMoB,aACXK,KAAKzB,MAAM0B,cAAa,GAExBD,KAAKM,SAAS,CACZjB,aAAc,M,oBAIlB,WACE,IAAIoB,EAAwC,IAA3BT,KAAKzB,MAAM8B,YAAoB,cAAgB,GAEhE,OADAI,GAAc,iBAEZ,oCACE,0BAASjC,GAAG,oBAAZ,UACE,oBAAIO,UAAU,iBAAd,SAAgCiB,KAAKZ,MAAMG,kBAAoB,UAAY,UAC3E,sBACAR,UAAW0B,EADX,SAECT,KAAKzB,MAAM8B,cACZ,sBACAtB,UAAW0B,EACXjC,GAAG,QAFH,eAGA,sBACAO,UAAW0B,EADX,SACoD,IAA5BT,KAAKZ,MAAMC,aAAqB,KAAOW,KAAKZ,MAAMC,aAAe,GAAK,IAAMW,KAAKZ,MAAMC,aAAeW,KAAKZ,MAAMC,kBAE3I,0BAASb,GAAG,oBAAZ,UACE,wBAAQ,YAAU,OAAOG,QAAWqB,KAAKP,cAAzC,kBACA,wBAAQ,YAAU,OAAOd,QAAWqB,KAAKP,cAAzC,kBACA,wBAAQd,QAAWqB,KAAKL,WAAxB,+B,GAhHUe,IAAMC,YCuBXC,G,MAxBD,SAACrC,GAEd,IAAMsC,EAAeC,mBAYrB,OACC,qBAAK/B,UAAU,QAAf,SACE,uBAAMgC,SAZa,SAACnB,GACtBA,EAAMoB,iBACN,IAAMC,EAAcJ,EAAaK,QAAQC,MACtCC,MAAMH,IACRI,MAAM,uBAEP9C,EAAM+C,aAAaL,GACnBJ,EAAaK,QAAQC,MAAQ,IAK3B,UACA,uBAAOpB,KAAK,OAASwB,IAAKV,EAAcW,UAAQ,IAChD,wBAAQzC,UAAU,SAASgB,KAAK,SAAhC,+BCoDW0B,MAjEf,WACE,MAA0CC,mBAAS,GAAnD,mBAAO7C,EAAP,KAAsB8C,EAAtB,KACA,EAA8CD,mBAAS,IAAvD,mBAAOzC,EAAP,KAAwB2C,EAAxB,KACA,EAAsCF,mBAAS,IAA/C,mBAAOrB,EAAP,KAAoBwB,EAApB,KACA,EAA4BH,oBAAS,GAArC,mBAAOhD,EAAP,KAAeoD,EAAf,KACA,EAA0BJ,mBAAS,GAAnC,mBAAOlC,EAAP,KAAcuC,EAAd,KA6BE,OACE,sBAAMhD,UAAU,MAAhB,SACE,oCACE,oBAAIA,UAAU,YAAd,4BACA,0BAASP,GAAG,qBAAZ,UACE,cAAC,EAAD,CACAM,sBA7BoB,SAACkD,GAC7BL,EAAiBK,IA6BTnD,cAAiBA,EACjBH,OAAUA,IAEV,cAAC,EAAD,CACAQ,wBA9BsB,SAAC+C,GAC/BL,EAAmBK,GACnBJ,EAAeI,IA4B6ChD,gBAAmBA,EACvEP,OAAUA,OAGZ,cAAC,EAAD,CAAO4C,YAnBM,SAACY,GACpBH,EAASG,MAmBH,cAAC,EAAD,CACAjD,gBAAmBA,EACnBoB,YAAeA,EACfE,oBAjCoB,SAAC4B,GAC3BN,EAAeM,IAiCTtD,cAAiBA,EACjBoB,aAhDa,SAACvB,GACpBoD,EAAUpD,IAgDJiB,WAhCa,WACnBiC,EAAmB,IACnBC,EAAe,IACfF,EAAiB,IA8BXnB,SAAYhB,UC7DtB4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7ef4a83a.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../ComponentStyles/BreakInterval.css';\r\n\r\nfunction BreakInterval(props) {\r\n  function increaseCounter() {\r\n    props.onBreakIntervalChange(props.breakInterval + 1);\r\n  }\r\n\r\n  function decreaseCounter() {\r\n    const currentInterval = props.breakInterval;\r\n\r\n    if (currentInterval === 0) {\r\n      return;\r\n    }\r\n\r\n    props.onBreakIntervalChange(currentInterval - 1);\r\n  }\r\n\r\n  return (\r\n    <section id=\"break-interval-container\">\r\n      <h4>Break Length</h4>\r\n      <section id=\"break-time-interval\">\r\n        <button\r\n        disabled = {props.isPlay ? \"disabled\" : \"\"}\r\n        onClick = {decreaseCounter}\r\n        className='counter-btn'\r\n        >-</button>\r\n        <p className=\"break-time\">{props.breakInterval}</p>\r\n        <button\r\n        disabled = {props.isPlay ? \"disabled\" : \"\"}\r\n        onClick = {increaseCounter}\r\n        className=\"counter-btn\">+</button>\r\n      </section>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default BreakInterval;","import React from 'react';\r\nimport '../ComponentStyles/SessionInterval.css';\r\n\r\nfunction SessionInterval(props) {\r\n\r\n  function increaseCounter() {\r\n    const currentInterval = props.sessionInterval;\r\n\r\n    if (currentInterval >= 60) {\r\n      return;\r\n    }\r\n    props.onSessionIntervalChange(props.sessionInterval + 1);\r\n  }\r\n\r\n  function decreaseCounter() {\r\n    const currentInterval = props.sessionInterval;\r\n\r\n    if (currentInterval === 0) {\r\n      return;\r\n    }\r\n\r\n    props.onSessionIntervalChange(currentInterval - 1);\r\n  }\r\n\r\n  return (\r\n    <section id=\"session-interval-container\">\r\n      <h4>Session Length</h4>\r\n      <section id=\"session-interval\">\r\n        <button\r\n        disabled = {props.isPlay ? \"disabled\" : \"\"}\r\n        onClick = {decreaseCounter}\r\n        className=\"counter-btn\">-</button>\r\n        <p className=\"session-time\">{props.sessionInterval}</p>\r\n        <button\r\n        disabled = {props.isPlay ? \"disabled\" : \"\"}\r\n        onClick = {increaseCounter}\r\n        className=\"counter-btn\">+</button>\r\n      </section>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default SessionInterval;","import React from 'react';\r\nimport '../ComponentStyles/SessionActions.css';\r\nimport '../ComponentStyles/Timer.css';\r\n\r\nclass Timer extends React.Component {\r\n  constructor() {\r\n    super()\r\n\r\n    this.state = {\r\n      timerSeconds: 0,\r\n      intervalId: '',\r\n      isSessionInterval: true,\r\n      cycle: 0\r\n    }\r\n\r\n    this.playStopTimer = this.playStopTimer.bind(this);\r\n    this.resetTimer = this.resetTimer.bind(this);\r\n  }\r\n\r\n  playStopTimer(event) {\r\n    const action = event.target.dataset.type;\r\n\r\n    switch (action) {\r\n      case 'play':\r\n        this.props.onPlayChange(true);\r\n        this.decreaseTimer();\r\n        break;\r\n      case 'stop':\r\n        this.props.onPlayChange(false);\r\n        clearInterval(this.state.intervalId);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n  decreaseTimer() {\r\n    //var n=1;\r\n    var intervalId = setInterval(() => {\r\n      switch(this.state.timerSeconds) {\r\n        case 0:\r\n          if (this.props.timerMinute === 0) {\r\n            if (this.state.isSessionInterval) {\r\n              // start break timer\r\n              this.setState({\r\n                isSessionInterval: false\r\n              })\r\n\r\n              this.props.onTimerMinuteChange(this.props.breakInterval);\r\n            } else {\r\n              // start session timer\r\n              this.setState({\r\n                isSessionInterval: true,\r\n                cycle: this.state.cycle+1\r\n\r\n              })\r\n              if(this.state.cycle===this.props.numcycle){\r\n                    clearInterval(this.state.intervalId);\r\n                }\r\n\r\n              this.props.onTimerMinuteChange(this.props.sessionInterval);\r\n            }\r\n          } else {\r\n            this.props.onTimerMinuteChange(this.props.timerMinute - 1);\r\n            this.setState({\r\n              timerSeconds: 59\r\n\r\n            })\r\n          }\r\n          break;\r\n        default:\r\n        this.setState({\r\n          timerSeconds: this.state.timerSeconds - 1\r\n        })\r\n          break;\r\n      }\r\n    }, 1000);\r\n\r\n    this.setState({\r\n      intervalId: intervalId\r\n    });\r\n\r\n    \r\n    \r\n  }\r\n\r\n  resetTimer() {\r\n    clearInterval(this.state.intervalId);\r\n\r\n    this.props.resetTimer();\r\n    this.props.onPlayChange(false);\r\n\r\n    this.setState({\r\n      timerSeconds: 0\r\n    })\r\n  }\r\n\r\n  render() {\r\n    let timerClass = this.props.timerMinute === 0 ? \"timer-alert\" : \"\";\r\n    timerClass += \" session-timer\";\r\n    return (\r\n      <section>\r\n        <section id=\"session-container\">\r\n          <h4 className=\"session-header\">{this.state.isSessionInterval ? 'Session' : 'Break'}</h4>\r\n          <span\r\n          className={timerClass}>\r\n          {this.props.timerMinute}</span>\r\n          <span\r\n          className={timerClass}\r\n          id=\"colon\">:</span>\r\n          <span\r\n          className={timerClass}>{this.state.timerSeconds === 0 ? '00' : this.state.timerSeconds < 10 ? '0' + this.state.timerSeconds : this.state.timerSeconds}</span>\r\n        </section>\r\n        <section id=\"actions-container\">\r\n          <button data-type=\"play\" onClick = {this.playStopTimer}>Play</button>\r\n          <button data-type=\"stop\" onClick = {this.playStopTimer}>Stop</button>\r\n          <button onClick = {this.resetTimer}>Refresh</button>\r\n        </section>\r\n      </section>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Timer;","import '../ComponentStyles/Cycle.css';\r\nimport { useRef } from 'react';\r\n\r\nconst Cycle = (props) => {\r\n\r\n\tconst itemInputRef = useRef();\r\n\r\n\tconst submitHandler = (event) =>{\r\n\t\tevent.preventDefault();\r\n\t\tconst enteredItem = itemInputRef.current.value;\r\n\t\tif(isNaN(enteredItem)){\r\n\t\t\talert('please enter number');\r\n\t\t}\r\n\t\tprops.numOfCycles(+enteredItem);\r\n\t\titemInputRef.current.value = '';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"input\">\r\n\t\t\t\t<form onSubmit={submitHandler}>\r\n\t\t\t\t<input type=\"text\"   ref={itemInputRef} required/>\r\n\t\t\t\t<button className=\"button\" type=\"submit\">Add Cycles</button>\r\n\t\t\t\t</form>\t\r\n\t\t</div>\t\t\r\n\t\t)\r\n}\r\n\r\nexport default Cycle;","import { useState } from 'react';\nimport '../ComponentStyles/App.css';\nimport BreakInterval from './BreakInterval';\nimport SessionInterval from './SessionInterval';\nimport Timer from './Timer';\nimport Cycle from './Cycle';\n\n\nfunction App () {\n  const [breakInterval, setBreakInterval] = useState(5);\n  const [sessionInterval, setSessionInterval] = useState(25);\n  const [timerMinute, setTimerMinute] = useState(25);\n  const [isPlay, setIsPlay] = useState(false);\n  const [cycle, setCycle] = useState(1);\n\n  const onPlayChange = (isPlay) =>{\n    setIsPlay(isPlay);\n  }\n\n  const onBreakIntervalChange = (newBreakLength) => {\n    setBreakInterval(newBreakLength);\n  }\n\n  const onSessionIntervalChange = (newSessionLength) => {\n    setSessionInterval(newSessionLength);\n    setTimerMinute(newSessionLength);\n  }\n\n  const onTimerMinuteChange = (minuteChange) => {\n    setTimerMinute(minuteChange);\n  }\n\n  const onResetTimer = () => {\n    setSessionInterval(25);\n    setTimerMinute(25);\n    setBreakInterval(5);\n  }\n\n  const cycleHandler = (num) =>{\n    setCycle(num);\n  }\n\n    return (\n      <main className=\"App\">\n        <section>\n          <h2 className=\"app-title\">Pomodoro Clock</h2>\n          <section id=\"interval-container\">\n            <BreakInterval\n            onBreakIntervalChange = {onBreakIntervalChange}\n            breakInterval = {breakInterval}\n            isPlay = {isPlay}\n            />\n            <SessionInterval\n            onSessionIntervalChange = {onSessionIntervalChange} sessionInterval = {sessionInterval}\n            isPlay = {isPlay}\n            />\n          </section>\n          <Cycle numOfCycles={cycleHandler}/>\n          <Timer\n          sessionInterval = {sessionInterval}\n          timerMinute = {timerMinute}\n          onTimerMinuteChange = {onTimerMinuteChange}\n          breakInterval = {breakInterval}\n          onPlayChange = {onPlayChange}\n          resetTimer = {onResetTimer}\n          numcycle= { cycle }\n          />\n        </section>\n      </main>\n    )\n  \n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';import App from './Components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}